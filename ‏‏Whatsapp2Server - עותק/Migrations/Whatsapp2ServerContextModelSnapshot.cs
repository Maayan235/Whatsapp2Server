// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Whatsapp2Server.Data;

#nullable disable

namespace Whatsapp2Server.Migrations
{
    [DbContext(typeof(Whatsapp2ServerContext))]
    partial class Whatsapp2ServerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ChatUser", b =>
                {
                    b.Property<int>("chatsId")
                        .HasColumnType("int");

                    b.Property<int>("contactsId")
                        .HasColumnType("int");

                    b.HasKey("chatsId", "contactsId");

                    b.HasIndex("contactsId");

                    b.ToTable("ChatUser");
                });

            modelBuilder.Entity("Whatsapp2Server.Models.Chat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.HasKey("Id");

                    b.ToTable("Chat");
                });

            modelBuilder.Entity("Whatsapp2Server.Models.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ChatId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("senderID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.ToTable("Message");
                });

            modelBuilder.Entity("Whatsapp2Server.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("nickName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("profilePicSrc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("ChatUser", b =>
                {
                    b.HasOne("Whatsapp2Server.Models.Chat", null)
                        .WithMany()
                        .HasForeignKey("chatsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Whatsapp2Server.Models.User", null)
                        .WithMany()
                        .HasForeignKey("contactsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Whatsapp2Server.Models.Message", b =>
                {
                    b.HasOne("Whatsapp2Server.Models.Chat", null)
                        .WithMany("messages")
                        .HasForeignKey("ChatId");
                });

            modelBuilder.Entity("Whatsapp2Server.Models.User", b =>
                {
                    b.HasOne("Whatsapp2Server.Models.User", null)
                        .WithMany("contacts")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Whatsapp2Server.Models.Chat", b =>
                {
                    b.Navigation("messages");
                });

            modelBuilder.Entity("Whatsapp2Server.Models.User", b =>
                {
                    b.Navigation("contacts");
                });
#pragma warning restore 612, 618
        }
    }
}
